AWSTemplateFormatVersion: '2010-09-09'
Description: Lambda Function Triggered by Kinesis Stream

Resources:
  TransactionsInputStream:
    Type: AWS::Kinesis::Stream
    Properties:
      Name: TransactionsInputStream
      ShardCount: 1

  TransactionsOutputStream:
    Type: AWS::Kinesis::Stream
    Properties:
      Name: TransactionsOutputStream
      ShardCount: 1

  FlinkApplicationRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "kinesisanalytics.amazonaws.com"
            Action: "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: "FlinkApplicationPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: "ReadCode"
                Effect: "Allow"
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                Resource: "arn:aws:s3:::flink-transactions-code-259984666282/flink-fraud-detection-1.0.jar"
              - Sid: "CloudWatchLogs"
                Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:DescribeLogGroups"
                  - "logs:DescribeLogStreams"
                  - "logs:PutLogEvents"
                Resource:
                  - "arn:aws:logs:us-east-1:259984666282:log-group:/aws/kinesis-analytics/FlinkAppManual:*"
                  - "arn:aws:logs:us-east-1:259984666282:log-group:/aws/kinesis-analytics/FlinkAppManual:log-stream:*"
              - Sid: "KinesisStreams"
                Effect: "Allow"
                Action:
                  - "kinesis:DescribeStream"
                  - "kinesis:GetShardIterator"
                  - "kinesis:GetRecords"
                  - "kinesis:PutRecord"
                  - "kinesis:PutRecords"
                  - "kinesis:ListShards"
                Resource:
                  - "arn:aws:kinesis:us-east-1:259984666282:stream/TransactionsInputStream"
                  - "arn:aws:kinesis:us-east-1:259984666282:stream/TransactionsOutputStream"

  FlinkApplication:
    Type: "AWS::KinesisAnalyticsV2::Application"
    Properties:
      ApplicationName: "FlinkTransactionProcessing"
      RuntimeEnvironment: "FLINK-1_15"
      ServiceExecutionRole: !GetAtt FlinkApplicationRole.Arn
      ApplicationConfiguration:
        ApplicationCodeConfiguration:
          CodeContent:
            S3ContentLocation:
              BucketARN: !Sub "arn:aws:s3:::flink-transactions-code-259984666282"
              FileKey: "flink-fraud-detection-1.0.jar"
          CodeContentType: "ZIPFILE"
        EnvironmentProperties:
          PropertyGroups:
            - PropertyGroupId: "ProducerConfigProperties"
              PropertyMap:
                "flink.inputstream.initpos": "LATEST"
                "aws.region": "us-east-1"
                "AggregationEnabled": "false"
            - PropertyGroupId: "ConsumerConfigProperties"
              PropertyMap:
                "aws.region": "us-east-1"
        FlinkApplicationConfiguration:
          MonitoringConfiguration:
            ConfigurationType: "CUSTOM"
            LogLevel: "INFO"
            MetricsLevel: "TASK"

  StartFlinkApplicationFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Handler: "index.handler"
      Role: !GetAtt StartFlinkApplicationRole.Arn
      Code:
        ZipFile: |
          import json
          import boto3
          def handler(event, context):
              client = boto3.client('kinesisanalyticsv2')
              try:
                  response = client.start_application(ApplicationName=event['ResourceProperties']['ApplicationName'])
                  return {'StatusCode': '200', 'Body': json.dumps(response)}
              except Exception as e:
                  return {'StatusCode': '400', 'Body': str(e)}
      Runtime: "python3.8"

  StartFlinkApplicationRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "lambda.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "LambdaFlinkStarterPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "kinesisanalytics:StartApplication"
                Resource: !Sub "arn:aws:kinesisanalytics:${AWS::Region}:${AWS::AccountId}:application/${FlinkApplication}"
              - Effect: "Allow"
                Action: "logs:CreateLogGroup"
                Resource: "arn:aws:logs:*:*:*"
              - Effect: "Allow"
                Action: "logs:CreateLogStream"
                Resource: "arn:aws:logs:*:*:*"
              - Effect: "Allow"
                Action: "logs:PutLogEvents"
                Resource: "arn:aws:logs:*:*:*"

  StartFlinkApplicationTrigger:
    Type: "Custom::StartFlinkApp"
    Properties:
      ServiceToken: !GetAtt StartFlinkApplicationFunction.Arn
      ApplicationName: !Ref FlinkApplication



